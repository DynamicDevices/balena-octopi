FROM balenalib/%%RESIN_MACHINE_NAME%%-debian:jessie

RUN install_packages \
	python-pip \
	python-dev \
	git \
	build-essential \
	libav-tools \
	avrdude \
	curl \
	subversion \
	libjpeg8-dev \
	imagemagick \
	libav-tools \
	cmake \
	haproxy

# Enable haproxy
RUN echo 'ENABLED=1' >> /etc/default/haproxy

# Deploy haproxy config
COPY ./Dockerbin/haproxy.cfg /etc/haproxy/haproxy.cfg

# Move to app dir
WORKDIR /usr/src/app

# Install Octoprint from source
RUN git clone https://github.com/foosel/OctoPrint.git ./octoprint \
  && cd /usr/src/app/octoprint && pip install --upgrade pip && pip install setuptools \
  && cd /usr/src/app/octoprint && pip install -r requirements.txt && python setup.py install \
  && cd /usr/src/app/octoprint && pip install https://github.com/BillyBlaze/OctoPrint-TouchUI/archive/master.zip \
	&& cd /usr/src/app/octoprint && pip install https://github.com/marian42/octoprint-preheat/archive/master.zip \
	&& cd /usr/src/app/octoprint && pip install "https://github.com/OctoPrint/OctoPrint-DisplayProgress/archive/master.zip" \
	&& cd /usr/src/app/octoprint && pip install https://github.com/malnvenshorn/OctoPrint-CostEstimation/archive/master.zip

# Build mjpg_streamer
RUN git clone https://github.com/jacksonliam/mjpg-streamer.git ./mjpg-streamer
RUN cd mjpg-streamer/mjpg-streamer-experimental && make

# Move app to filesystem
COPY ./app ./

## uncomment if you want systemd
ENV INITSYSTEM on

# Enable udevd so that plugged dynamic hardware devices show up in our container.
ENV UDEV=1

# Start app
CMD ["bash", "/usr/src/app/start.sh"]
